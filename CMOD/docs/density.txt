
//  SoundsPerSec.  Maps an "abstract" density of 0 - 1 onto a number of sounds
//  per second by defining a total number of regions (areas) and the number of
//  such areas with less than 1 sound/sec. (underOne).  A common example:
//
// areas         0       1       2       3       4       5       6       7
// dens.   0.00    0.125   0.250   0.375   0.500   0.625   0.750   0.875
// 1.00
// s/sec    1/16    1/8     1/4     1/2      1       2       4       8      16
//
//  Here, there are 8 areas (0-7) and 4 of them (0-3) include values of less
//  than 1 sound/sec.  By subtracting underOne, a dens = 0 is mapped onto a
//  value of 1 sound every 16 sec. and not onto 0.
//
// In most cases areas = 8 and underOne = 4 like in the above example.



Finding the density of a section/box when its duration is known and when
the number of desired objects is known:

	log(numObjects / duration) / (8 * log2) + 0.5

	= log(numObjects / duration) / 2.408239965 + 0.5

To find the number of objects given the density:

	soundsPsec = pow(2, dens * areas - underOne)
and
	numObjects = duration * soundsPsec

===============================================================================

To calculate densities for different layers of the same object:

IF all objects have the same duration:

	1. Find out the total number of objects in that event.
	2. Find out the % of time each layer is active
	3. Normalize these % (divide each by their sum)
	4. Find out how many objects in each layer
	5. Determine the density of each layer according to the above

