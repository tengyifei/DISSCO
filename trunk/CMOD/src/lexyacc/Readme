To add a new keyword:
edit the parser.l file. I have put in a comment in the file telling you where
to add a new token. The token can take any POSIX regular expression, but for
the most part we will only add the word we want to look for. Then you need to
specify an action to be taken, within {}'s. For the most part this will just
be to return some token. THe token name can be whatever you wish, as long as
it does not clash with another token.

Next edit the paresr.y file. I have also placed a comment telling you where to
add the new token. The parser.y file takes patterns based on its tokens and
rules you can specify, and then can execute arbitrary C code.

Then run the gen_parser.sh fyile. This builds the  parser.y and parser.l
files, and for the moment , creates an executable for testing.

Some things to note:
The parser right now accepts  input from standard input. I will read up on how
to make it take a file.
To use a file for testing, it should be sufficent to use input redirect (eg.
parser < file). 
