.TH "Patter" 3 "12 Feb 2007" "CMOD" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Patter \- 
.SH SYNOPSIS
.br
.PP
\fC#include <patter.h>\fP
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBPatter\fP (char *aFile)"
.br
.ti -1c
.RI "\fBPatter\fP (double aCheckPoint, int anOffset, char *aFile)"
.br
.ti -1c
.RI "\fBPatter\fP (void)"
.br
.ti -1c
.RI "\fB~Patter\fP ()"
.br
.ti -1c
.RI "void \fBclear\fP ()"
.br
.ti -1c
.RI "void \fBNursery\fP (int anOrigin)"
.br
.ti -1c
.RI "void \fBNursery\fP (std::list< \fBFileValue\fP > args)"
.br
.ti -1c
.RI "int \fBDelivery\fP (double \fBcheckPoint\fP, int \fBoffset\fP)"
.br
.ti -1c
.RI "void \fBGetPatty\fP ()"
.br
.ti -1c
.RI "std::list< int > \fBgetPattern\fP (void)"
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "void \fBInitPat\fP ()"
.br
.ti -1c
.RI "void \fBInitPat\fP (int \fBsize\fP, int *data)"
.br
.ti -1c
.RI "void \fBSimplePat\fP ()"
.br
.ti -1c
.RI "void \fBInitProb\fP ()"
.br
.ti -1c
.RI "void \fBExpand\fP ()"
.br
.ti -1c
.RI "void \fBExpand\fP (std::list< \fBFileValue\fP > args)"
.br
.ti -1c
.RI "void \fBEquivalence\fP ()"
.br
.ti -1c
.RI "void \fBEquivalence\fP (int modulo, int low, int high)"
.br
.ti -1c
.RI "void \fBSymmetries\fP ()"
.br
.ti -1c
.RI "void \fBSymmetries\fP (int modulo, int low, int high)"
.br
.ti -1c
.RI "void \fBDistort\fP ()"
.br
.ti -1c
.RI "void \fBDistort\fP (int modulo, int low, int high)"
.br
.ti -1c
.RI "void \fBAdjust\fP ()"
.br
.ti -1c
.RI "void \fBAdjust\fP (int modulo, int low, int high)"
.br
.ti -1c
.RI "bool \fBCheckRange\fP (int low, int high, int element)"
.br
.ti -1c
.RI "int \fBChooser\fP (double \fBcheckPoint\fP, int \fBoffset\fP)"
.br
.ti -1c
.RI "void \fBRecorder\fP (int fileLength)"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "int * \fBinterArray\fP"
.br
.ti -1c
.RI "int * \fBpatty\fP"
.br
.ti -1c
.RI "int \fBsize\fP"
.br
.ti -1c
.RI "int \fBoffset\fP"
.br
.ti -1c
.RI "int \fBorigin\fP"
.br
.ti -1c
.RI "double \fBcheckPoint\fP"
.br
.ti -1c
.RI "char * \fBfileName\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
This class generates a pattern of values using a user defined origin and a sequence of intervals and it delivers one value at a time. Same input may be used to generate various related paterns produced through mod m equivalences, symmetrical set forms (R, I, RI), and distortions. It uses input from user defined files describing the type of object and its parameters (box, sound, etc.) as well as the pattern itself (PAT file). 
.PP
\fBAuthor:\fP
.RS 4
Sever Tipei July 14, 2005 
.RE
.PP
Definition at line 46 of file patter.h.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Patter::Patter (char * aFile)"
.PP
Constructor for (almost) empty object. File name PAT/... is necessary. Definition at line 49 of file patter.cpp.
.PP
References fileName, interArray, patty, and size.
.SS "Patter::Patter (double aCheckPoint, int anOffset, char * aFile)"
.PP
Advanced constructor. Definition at line 60 of file patter.cpp.
.PP
References checkPoint, fileName, interArray, offset, patty, and size.
.SS "Patter::Patter (void)"
.PP
Constructor for empty object. This will be used by eventfactory system for evaluating patter objects. Definition at line 72 of file patter.cpp.
.PP
References interArray, offset, origin, patty, and size.
.SS "Patter::~\fBPatter\fP ()"
.PP
Destructor Definition at line 85 of file patter.cpp.
.PP
References clear().
.SH "Member Function Documentation"
.PP 
.SS "void Patter::Adjust (int modulo, int low, int high)\fC [private]\fP"
.PP
Definition at line 499 of file patter.cpp.
.PP
References sever.
.SS "void Patter::Adjust ()\fC [private]\fP"
.PP
Definition at line 491 of file patter.cpp.
.PP
References sever.
.PP
Referenced by Delivery(), and Nursery().
.SS "bool Patter::CheckRange (int low, int high, int element)\fC [private]\fP"
.PP
Checks if the new element is within the defined range. Definition at line 508 of file patter.cpp.
.PP
Referenced by Equivalence().
.SS "int Patter::Chooser (double checkPoint, int offset)\fC [private]\fP"
.PP
Coordinates various ways of choosing a member of the _value_ array patty. Definition at line 516 of file patter.cpp.
.PP
References DataIn::nameOf, patty, DataIn::ReadChars(), ReadComputeFloat(), and sever.
.PP
Referenced by Delivery().
.SS "void Patter::clear ()"
.PP
Deletes pointer arrays. Definition at line 92 of file patter.cpp.
.PP
References interArray, patty, and size.
.PP
Referenced by ~Patter().
.SS "int Patter::Delivery (double checkPoint, int offset)"
.PP
Delivers the pattern array patty by calling various methods. Reads from the parent file. Definition at line 554 of file patter.cpp.
.PP
References Adjust(), Chooser(), GetPatty(), DataIn::nameOf, DataIn::ReadChars(), DataIn::ReadDummies(), and sever.
.SS "void Patter::Distort (int modulo, int low, int high)\fC [private]\fP"
.PP
Definition at line 480 of file patter.cpp.
.PP
References sever.
.SS "void Patter::Distort ()\fC [private]\fP"
.PP
Definition at line 471 of file patter.cpp.
.PP
References sever.
.PP
Referenced by Expand().
.SS "void Patter::Equivalence (int modulo, int low, int high)\fC [private]\fP"
.PP
Definition at line 396 of file patter.cpp.
.PP
References CheckRange(), Random::ChooseFromProb(), CumulArray(), interArray, origin, patty, and size.
.SS "void Patter::Equivalence ()\fC [private]\fP"
.PP
Finds all intervals allowed by a given range which are equivalent mod m with the initial list. The 'numTerms' equivalence should not be reduced since the terms are integers.
.PP
do devise other ways of assigning probabilities to equivalence clases. Definition at line 333 of file patter.cpp.
.PP
References CheckRange(), Random::ChooseFromProb(), CumulArray(), interArray, DataIn::intVect, origin, patty, DataIn::ReadInts(), and size.
.PP
Referenced by Expand().
.SS "void Patter::Expand (std::list< \fBFileValue\fP > args)\fC [private]\fP"
.PP
Definition at line 296 of file patter.cpp.
.PP
References Distort(), Equivalence(), sever, and Symmetries().
.SS "void Patter::Expand ()\fC [private]\fP"
.PP
Coordinates various methos of expanding and/or modifying the pattern: equivalence classes, transpositions, symmetric forms (I, R, RI), distortions (augmentation, diminution, etc,), etc. Definition at line 266 of file patter.cpp.
.PP
References Distort(), Equivalence(), DataIn::nameOf, DataIn::ReadChars(), sever, and Symmetries().
.PP
Referenced by Nursery().
.SS "std::list< int > Patter::getPattern (void)"
.PP
Return a pattern object created by 'Nursery' via the eventfactory interface. Definition at line 649 of file patter.cpp.
.PP
References patty, and size.
.PP
Referenced by FileValue::Evaluate().
.SS "void Patter::GetPatty ()"
.PP
Reads an existing pattern from a PAT file (at the end of the file) created by a previous Patter object and stores it in an array (patty) to be used by the current Patter object. It is called only for objects (eg. sounds) whose numbers are > 0, not by the first object in a series. Definition at line 587 of file patter.cpp.
.PP
References DataIn::GenInts(), DataIn::gIntVect, DataIn::intVect, patty, DataIn::ReadDummies(), DataIn::ReadInts(), size, and DataIn::Skip().
.PP
Referenced by Delivery().
.SS "void Patter::InitPat (int size, int * data)\fC [private]\fP"
.PP
Definition at line 212 of file patter.cpp.
.PP
References interArray, patty, and size.
.SS "void Patter::InitPat ()\fC [private]\fP"
.PP
Creates an empty array patty. Reads in an _interval_ pattern from a PAT file and copies it into an array of intervals which can be manipulated further. Definition at line 191 of file patter.cpp.
.PP
References DataIn::GenInts(), DataIn::gIntVect, interArray, DataIn::intVect, patty, DataIn::ReadInts(), and size.
.PP
Referenced by Nursery().
.SS "void Patter::InitProb ()\fC [private]\fP"
.PP
Definition at line 246 of file patter.cpp.
.PP
Referenced by Nursery().
.SS "void Patter::Nursery (std::list< \fBFileValue\fP > args)"
.PP
Definition at line 143 of file patter.cpp.
.PP
References Adjust(), Expand(), InitPat(), InitProb(), sever, SimplePat(), and size.
.SS "void Patter::Nursery (int anOrigin)"
.PP
Coordinates the creation of a new pattern from data in a PAT file by calling various methods. Records the new pattern at the end of the PAT file. It is called only for the first object in a series of similar objects. Definition at line 101 of file patter.cpp.
.PP
References Adjust(), Expand(), InitPat(), InitProb(), DataIn::intVect, DataIn::nameOf, origin, DataIn::ReadChars(), DataIn::ReadDummies(), DataIn::ReadInts(), Recorder(), sever, and SimplePat().
.PP
Referenced by FileValue::Evaluate().
.SS "void Patter::Recorder (int fileLength)\fC [private]\fP"
.PP
Records a pattern created by 'Nursery' at the end of a PAT file. It copies the content of the PAT file up to the pattern into a buffer array, opens an output file with the same name as the original (input) file and writes first the content of the original file and then the pattern array patty. This way, if the same pattern file is used multiple times to generate similar patterns, only the record of the current patty array is kept. Definition at line 610 of file patter.cpp.
.PP
References DataIn::buffer, fileName, patty, DataIn::ReadBuffer(), DataIn::rewindFile(), and size.
.PP
Referenced by Nursery().
.SS "void Patter::SimplePat ()\fC [private]\fP"
.PP
Creates a patty array by starting with the origin and adding to each location the next member of the interval array interArray Definition at line 229 of file patter.cpp.
.PP
References interArray, origin, patty, and size.
.PP
Referenced by Nursery().
.SS "void Patter::Symmetries (int modulo, int low, int high)\fC [private]\fP"
.PP
Definition at line 462 of file patter.cpp.
.PP
References sever.
.SS "void Patter::Symmetries ()\fC [private]\fP"
.PP
Definition at line 454 of file patter.cpp.
.PP
References sever.
.PP
Referenced by Expand().
.SH "Member Data Documentation"
.PP 
.SS "double \fBPatter::checkPoint\fP\fC [private]\fP"
.PP
Definition at line 200 of file patter.h.
.PP
Referenced by Patter().
.SS "char* \fBPatter::fileName\fP\fC [private]\fP"
.PP
Definition at line 202 of file patter.h.
.PP
Referenced by Patter(), and Recorder().
.SS "int* \fBPatter::interArray\fP\fC [private]\fP"
.PP
Definition at line 194 of file patter.h.
.PP
Referenced by clear(), Equivalence(), InitPat(), Patter(), and SimplePat().
.SS "int \fBPatter::offset\fP\fC [private]\fP"
.PP
Definition at line 198 of file patter.h.
.PP
Referenced by Patter().
.SS "int \fBPatter::origin\fP\fC [private]\fP"
.PP
Definition at line 199 of file patter.h.
.PP
Referenced by Equivalence(), Nursery(), Patter(), and SimplePat().
.SS "int* \fBPatter::patty\fP\fC [private]\fP"
.PP
Definition at line 195 of file patter.h.
.PP
Referenced by Chooser(), clear(), Equivalence(), getPattern(), GetPatty(), InitPat(), Patter(), Recorder(), and SimplePat().
.SS "int \fBPatter::size\fP\fC [private]\fP"
.PP
Definition at line 197 of file patter.h.
.PP
Referenced by clear(), Equivalence(), getPattern(), GetPatty(), InitPat(), Nursery(), Patter(), Recorder(), and SimplePat().

.SH "Author"
.PP 
Generated automatically by Doxygen for CMOD from the source code.
